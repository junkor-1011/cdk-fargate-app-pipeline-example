// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test TestApp Stack's Snapshot test 1`] = `
Object {
  "Outputs": Object {
    "helloApigatewayEndpoint72D9EB4E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "helloApigatewayD1490B0F",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AcceptTest7B7FF621": Object {
      "DependsOn": Array [
        "AcceptTestServiceRole0D4E0F1C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "88d3e6f24370583831e162cbfdc7b2494b2c057f421e44cc29db76e46c38ca95.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AcceptTestServiceRole0D4E0F1C",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceptTestServiceRole0D4E0F1C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeniedTestFA70CDD5": Object {
      "DependsOn": Array [
        "DeniedTestServiceRoleB416408F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a3024aa83a9e1ae5c5b07b1804903a003866115cf3b847eec48e4fb718f744f7.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeniedTestServiceRoleB416408F",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeniedTestServiceRoleB416408F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Hello4A628BD4": Object {
      "DependsOn": Array [
        "HelloServiceRole1E55EA16",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e9fd3169e87957e12c36088861a5ef323832b7eb8c11ffaa32a6a90e0f0d0d44.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "HelloServiceRole1E55EA16",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "HelloServiceRole1E55EA16": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "PoolD3F588B8": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            Object {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "LambdaConfig": Object {
          "PreTokenGeneration": Object {
            "Fn::GetAtt": Array [
              "preTokenGenerationLambda1F130400",
              "Arn",
            ],
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "Poolappclient2D3B8A6A": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "openid",
        ],
        "CallbackURLs": Array [
          "https://example.com",
        ],
        "ExplicitAuthFlows": Array [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": false,
        "RefreshTokenValidity": 720,
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "TokenValidityUnits": Object {
          "RefreshToken": "minutes",
        },
        "UserPoolId": Object {
          "Ref": "PoolD3F588B8",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "cognitoAuthorizer9878DCCA": Object {
      "Properties": Object {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "CognitoAuthorizer",
        "ProviderARNs": Array [
          Object {
            "Fn::GetAtt": Array [
              "PoolD3F588B8",
              "Arn",
            ],
          },
        ],
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
        "Type": "COGNITO_USER_POOLS",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "helloApigatewayAccountD0841D91": Object {
      "DependsOn": Array [
        "helloApigatewayD1490B0F",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "helloApigatewayCloudWatchRole4D45C3C0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "helloApigatewayCloudWatchRole4D45C3C0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "helloApigatewayD1490B0F": Object {
      "Properties": Object {
        "Name": "testapp-apigateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "helloApigatewayDeploymentCD355D6300f45aa1974ffc8c1431dbe2c7ba9044": Object {
      "DependsOn": Array [
        "helloApigatewayhelloGET66EA629E",
        "helloApigatewayhellolambdaauthorizertesthelloacceptGETA60713D8",
        "helloApigatewayhellolambdaauthorizertesthelloaccept76EB8707",
        "helloApigatewayhellolambdaauthorizertesthellodeniedGET0EEC235D",
        "helloApigatewayhellolambdaauthorizertesthellodeniedA8802A0A",
        "helloApigatewayhellolambdaauthorizertest97CC4217",
        "helloApigatewayhello91568F63",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "helloApigatewayDeploymentStageprod7A3EC8D8": Object {
      "DependsOn": Array [
        "helloApigatewayAccountD0841D91",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "helloApigatewayDeploymentCD355D6300f45aa1974ffc8c1431dbe2c7ba9044",
        },
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "helloApigatewayhello91568F63": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "helloApigatewayD1490B0F",
            "RootResourceId",
          ],
        },
        "PathPart": "hello",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewayhelloGET66EA629E": Object {
      "Properties": Object {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": Object {
          "Ref": "cognitoAuthorizer9878DCCA",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "Hello4A628BD4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "helloApigatewayhello91568F63",
        },
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "helloApigatewayhelloGETApiPermissionTestAppStackhelloApigateway472B4703GEThello15154D55": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "Hello4A628BD4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/",
              Object {
                "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
              },
              "/GET/hello",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewayhelloGETApiPermissionTestTestAppStackhelloApigateway472B4703GEThello0AE7E200": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "Hello4A628BD4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/test-invoke-stage/GET/hello",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewayhellolambdaauthorizertest97CC4217": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "helloApigatewayhello91568F63",
        },
        "PathPart": "lambda-authorizer-test",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewayhellolambdaauthorizertesthelloaccept76EB8707": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "helloApigatewayhellolambdaauthorizertest97CC4217",
        },
        "PathPart": "hello-accept",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewayhellolambdaauthorizertesthelloacceptGETA60713D8": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "AcceptTest7B7FF621",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "helloApigatewayhellolambdaauthorizertesthelloaccept76EB8707",
        },
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "helloApigatewayhellolambdaauthorizertesthelloacceptGETApiPermissionTestAppStackhelloApigateway472B4703GEThellolambdaauthorizertesthelloacceptC0BF7238": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AcceptTest7B7FF621",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/",
              Object {
                "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
              },
              "/GET/hello/lambda-authorizer-test/hello-accept",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewayhellolambdaauthorizertesthelloacceptGETApiPermissionTestTestAppStackhelloApigateway472B4703GEThellolambdaauthorizertesthelloacceptEE1B602A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AcceptTest7B7FF621",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/test-invoke-stage/GET/hello/lambda-authorizer-test/hello-accept",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewayhellolambdaauthorizertesthellodeniedA8802A0A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "helloApigatewayhellolambdaauthorizertest97CC4217",
        },
        "PathPart": "hello-denied",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewayhellolambdaauthorizertesthellodeniedGET0EEC235D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeniedTestFA70CDD5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "helloApigatewayhellolambdaauthorizertesthellodeniedA8802A0A",
        },
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "helloApigatewayhellolambdaauthorizertesthellodeniedGETApiPermissionTestAppStackhelloApigateway472B4703GEThellolambdaauthorizertesthellodenied5776E129": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeniedTestFA70CDD5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/",
              Object {
                "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
              },
              "/GET/hello/lambda-authorizer-test/hello-denied",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewayhellolambdaauthorizertesthellodeniedGETApiPermissionTestTestAppStackhelloApigateway472B4703GEThellolambdaauthorizertesthellodenied7D0DCFD9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeniedTestFA70CDD5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/test-invoke-stage/GET/hello/lambda-authorizer-test/hello-denied",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "preTokenGenerationLambda1F130400": Object {
      "DependsOn": Array [
        "preTokenGenerationLambdaServiceRole0C3B4FA0",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "98e5402f5cb6af156c6f350169244e271c03e96f2e81189fa2e8fc1a4787b5a4.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "preTokenGenerationLambdaServiceRole0C3B4FA0",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "preTokenGenerationLambdaPreTokenGenerationCognitoB0148D6A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "preTokenGenerationLambda1F130400",
            "Arn",
          ],
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "PoolD3F588B8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "preTokenGenerationLambdaServiceRole0C3B4FA0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
