// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test BackendStack's Snapshot test 1`] = `
Object {
  "Outputs": Object {
    "helloApigatewayEndpoint72D9EB4E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "helloApigatewayD1490B0F",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AcceptTest7B7FF621": Object {
      "DependsOn": Array [
        "AcceptTestServiceRole0D4E0F1C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d8b0f9a98bed9b82e720ee0b88391580b4a12342c184406d7cd4688770b95da4.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AcceptTestServiceRole0D4E0F1C",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceptTestServiceRole0D4E0F1C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ColorAuthorizerD6B973DF": Object {
      "Properties": Object {
        "AuthorizerUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      ":",
                      Object {
                        "Fn::GetAtt": Array [
                          "ColorAuthorizerLambda324ACEC8",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":apigateway:",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      ":",
                      Object {
                        "Fn::GetAtt": Array [
                          "ColorAuthorizerLambda324ACEC8",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "ColorAuthorizerLambda324ACEC8",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "method.request.header.Authorization",
        "Name": "TestAppStackColorAuthorizer71FDF26F",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
        "Type": "TOKEN",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "ColorAuthorizerLambda324ACEC8": Object {
      "DependsOn": Array [
        "ReadSSMParamLambdaRole2C496AC9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "152d82139f2d6d36e927a0f737ef8da58ef4836add31b24419bca003f35c1f8a.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ReadSSMParamLambdaRole2C496AC9",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ColorAuthorizerLambdaTestAppStackColorAuthorizer71FDF26FPermissions6414D824": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ColorAuthorizerLambda324ACEC8",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/authorizers/",
              Object {
                "Ref": "ColorAuthorizerD6B973DF",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeniedTestFA70CDD5": Object {
      "DependsOn": Array [
        "DeniedTestServiceRoleB416408F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "26553e840f36522c76356f5a3a3ba63e89aa56843e5c4b6f4f42795e3bc3fdcb.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeniedTestServiceRoleB416408F",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeniedTestServiceRoleB416408F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FruitsAuthorizer4E8A27AA": Object {
      "Properties": Object {
        "AuthorizerUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      ":",
                      Object {
                        "Fn::GetAtt": Array [
                          "FruitsAuthorizerLambdaAB18D47B",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":apigateway:",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      ":",
                      Object {
                        "Fn::GetAtt": Array [
                          "FruitsAuthorizerLambdaAB18D47B",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "FruitsAuthorizerLambdaAB18D47B",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "method.request.header.Authorization",
        "Name": "TestAppStackFruitsAuthorizer4EB4EB77",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
        "Type": "TOKEN",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "FruitsAuthorizerLambdaAB18D47B": Object {
      "DependsOn": Array [
        "ReadSSMParamLambdaRole2C496AC9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "55e72e9dfb747986a02ee4ae7b356bce358f57f45b00c1aebfd3bddb50f06779.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ReadSSMParamLambdaRole2C496AC9",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FruitsAuthorizerLambdaTestAppStackFruitsAuthorizer4EB4EB77Permissions4DBAA83E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "FruitsAuthorizerLambdaAB18D47B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/authorizers/",
              Object {
                "Ref": "FruitsAuthorizer4E8A27AA",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Hello4A628BD4": Object {
      "DependsOn": Array [
        "HelloServiceRole1E55EA16",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e63f2a8e1bb43ba92cb61ad75e2eb81040744cb19cf4f7a8119b0de1103e837d.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "HelloServiceRole1E55EA16",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "HelloServiceRole1E55EA16": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "PoolD3F588B8": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            Object {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "LambdaConfig": Object {
          "PreTokenGeneration": Object {
            "Fn::GetAtt": Array [
              "preTokenGenerationLambda1F130400",
              "Arn",
            ],
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "Poolappclient2D3B8A6A": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "openid",
        ],
        "CallbackURLs": Array [
          "https://example.com",
        ],
        "ExplicitAuthFlows": Array [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": false,
        "RefreshTokenValidity": 720,
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "TokenValidityUnits": Object {
          "RefreshToken": "minutes",
        },
        "UserPoolId": Object {
          "Ref": "PoolD3F588B8",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "ReadSSMParamLambdaRole2C496AC9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for Lambda reading param from ssm",
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMReadOnlyAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "cognitoAuthorizer9878DCCA": Object {
      "Properties": Object {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "CognitoAuthorizer",
        "ProviderARNs": Array [
          Object {
            "Fn::GetAtt": Array [
              "PoolD3F588B8",
              "Arn",
            ],
          },
        ],
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
        "Type": "COGNITO_USER_POOLS",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "helloApigatewayAccountD0841D91": Object {
      "DependsOn": Array [
        "helloApigatewayD1490B0F",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "helloApigatewayCloudWatchRole4D45C3C0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "helloApigatewayCloudWatchRole4D45C3C0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "helloApigatewayD1490B0F": Object {
      "Properties": Object {
        "Name": "testapp-apigateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "helloApigatewayDeploymentCD355D6316b8df9369c1de87f61c8ccce03cbb5a": Object {
      "DependsOn": Array [
        "helloApigatewayhelloGET66EA629E",
        "helloApigatewayhello91568F63",
        "helloApigatewaylambdaauthorizertesthelloacceptGET5FC2734D",
        "helloApigatewaylambdaauthorizertesthelloaccept11EFC59F",
        "helloApigatewaylambdaauthorizertesthellodeniedGETDA1B6445",
        "helloApigatewaylambdaauthorizertesthellodenied2026FC11",
        "helloApigatewaylambdaauthorizertestB48C19FB",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "helloApigatewayDeploymentStageprod7A3EC8D8": Object {
      "DependsOn": Array [
        "helloApigatewayAccountD0841D91",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "helloApigatewayDeploymentCD355D6316b8df9369c1de87f61c8ccce03cbb5a",
        },
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "helloApigatewayhello91568F63": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "helloApigatewayD1490B0F",
            "RootResourceId",
          ],
        },
        "PathPart": "hello",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewayhelloGET66EA629E": Object {
      "Properties": Object {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": Object {
          "Ref": "cognitoAuthorizer9878DCCA",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "Hello4A628BD4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "helloApigatewayhello91568F63",
        },
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "helloApigatewayhelloGETApiPermissionTestAppStackhelloApigateway472B4703GEThello15154D55": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "Hello4A628BD4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/",
              Object {
                "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
              },
              "/GET/hello",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewayhelloGETApiPermissionTestTestAppStackhelloApigateway472B4703GEThello0AE7E200": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "Hello4A628BD4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/test-invoke-stage/GET/hello",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewaylambdaauthorizertestB48C19FB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "helloApigatewayD1490B0F",
            "RootResourceId",
          ],
        },
        "PathPart": "lambda-authorizer-test",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewaylambdaauthorizertesthelloaccept11EFC59F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "helloApigatewaylambdaauthorizertestB48C19FB",
        },
        "PathPart": "hello-accept",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewaylambdaauthorizertesthelloacceptGET5FC2734D": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "ColorAuthorizerD6B973DF",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "AcceptTest7B7FF621",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "helloApigatewaylambdaauthorizertesthelloaccept11EFC59F",
        },
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "helloApigatewaylambdaauthorizertesthelloacceptGETApiPermissionTestAppStackhelloApigateway472B4703GETlambdaauthorizertesthelloaccept3C948C2F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AcceptTest7B7FF621",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/",
              Object {
                "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
              },
              "/GET/lambda-authorizer-test/hello-accept",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewaylambdaauthorizertesthelloacceptGETApiPermissionTestTestAppStackhelloApigateway472B4703GETlambdaauthorizertesthelloaccept91B13977": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AcceptTest7B7FF621",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/test-invoke-stage/GET/lambda-authorizer-test/hello-accept",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewaylambdaauthorizertesthellodenied2026FC11": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "helloApigatewaylambdaauthorizertestB48C19FB",
        },
        "PathPart": "hello-denied",
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "helloApigatewaylambdaauthorizertesthellodeniedGETApiPermissionTestAppStackhelloApigateway472B4703GETlambdaauthorizertesthellodenied978585D5": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeniedTestFA70CDD5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/",
              Object {
                "Ref": "helloApigatewayDeploymentStageprod7A3EC8D8",
              },
              "/GET/lambda-authorizer-test/hello-denied",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewaylambdaauthorizertesthellodeniedGETApiPermissionTestTestAppStackhelloApigateway472B4703GETlambdaauthorizertesthellodeniedF8AEF0BB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeniedTestFA70CDD5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "helloApigatewayD1490B0F",
              },
              "/test-invoke-stage/GET/lambda-authorizer-test/hello-denied",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "helloApigatewaylambdaauthorizertesthellodeniedGETDA1B6445": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "FruitsAuthorizer4E8A27AA",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeniedTestFA70CDD5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "helloApigatewaylambdaauthorizertesthellodenied2026FC11",
        },
        "RestApiId": Object {
          "Ref": "helloApigatewayD1490B0F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "preTokenGenerationLambda1F130400": Object {
      "DependsOn": Array [
        "preTokenGenerationLambdaServiceRole0C3B4FA0",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "7441449058ee072c3a5000666bbceb586ed04b6bcaf2d54cf66a06e95232a013.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "preTokenGenerationLambdaServiceRole0C3B4FA0",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "preTokenGenerationLambdaPreTokenGenerationCognitoB0148D6A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "preTokenGenerationLambda1F130400",
            "Arn",
          ],
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "PoolD3F588B8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "preTokenGenerationLambdaServiceRole0C3B4FA0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`snapshot test PipelineStack's Snapshot test 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Pipeline9850B417": Object {
      "DependsOn": Array [
        "PipelineRoleDefaultPolicy7BDC1ABB",
        "PipelineRoleB27FAA37",
      ],
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "PipelineArtifactsBucketAEA9A052",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "PipelineRoleB27FAA37",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "main",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::GetAtt": Array [
                      "Repository22E53BBD",
                      "Name",
                    ],
                  },
                },
                "Name": Object {
                  "Fn::GetAtt": Array [
                    "Repository22E53BBD",
                    "Name",
                  ],
                },
                "OutputArtifacts": Array [
                  Object {
                    "Name": "c8de3ed39a6536fdc0ffcb0268e549ecba9b647caa_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineSourceCodeCommitCodePipelineActionRole48F8DEFA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"4ea1c9318551acca714bdf8af6bdc1a04c4b91abf4858d4d4c30065c4ff794bd\\"}]",
                  "ProjectName": Object {
                    "Ref": "PipelineBuildSynthCdkBuildProject6BEFA8E6",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "c8de3ed39a6536fdc0ffcb0268e549ecba9b647caa_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineCodeBuildActionRole226DB0CB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"9e91b102d3e9a4675ac65c2145f95b384b1b6b1f302b281994f45c897b73842b\\"}]",
                  "ProjectName": Object {
                    "Ref": "PipelineUpdatePipelineSelfMutationDAA41400",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineCodeBuildActionRole226DB0CB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "PipelineAssetsFileAsset185A67CB4",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineCodeBuildActionRole226DB0CB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "PipelineAssetsFileAsset24D2D639B",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset2",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineCodeBuildActionRole226DB0CB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "PipelineAssetsFileAsset3FE71B523",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset3",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineCodeBuildActionRole226DB0CB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "PipelineAssetsFileAsset474303B7D",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset4",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineCodeBuildActionRole226DB0CB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "PipelineAssetsFileAsset5184A5C2F",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset5",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineCodeBuildActionRole226DB0CB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "PipelineAssetsFileAsset669C72F3C",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset6",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineCodeBuildActionRole226DB0CB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Dev-BackendStack",
                  "TemplatePath": "Synth_Output::assembly-TestAppStack-Dev/TestAppStackDevBackendStackEE4ED375.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Dev-BackendStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Dev",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1",
                },
                "Name": "PromoteToProd",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineProdPromoteToProdCodePipelineActionRole08AAED6C",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Prod-BackendStack",
                  "TemplatePath": "Synth_Output::assembly-TestAppStack-Prod/TestAppStackProdBackendStackD2D1F66B.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "BackendStack.Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Prod-BackendStack",
                },
                "Name": "BackendStack.Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 3,
              },
            ],
            "Name": "Prod",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "PipelineArtifactsBucketAEA9A052": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "PipelineArtifactsBucketPolicyF53CCC52": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "PipelineArtifactsBucketAEA9A052",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "PipelineAssetsFileAsset185A67CB4": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step TestAppStack/Pipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "PipelineAssetsFileRole59943A77",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-TestAppStack-Dev/TestAppStackDevBackendStackEE4ED375.assets.json\\\\\\" --verbose publish \\\\\\"7441449058ee072c3a5000666bbceb586ed04b6bcaf2d54cf66a06e95232a013:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PipelineAssetsFileAsset24D2D639B": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step TestAppStack/Pipeline/Assets/FileAsset2",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "PipelineAssetsFileRole59943A77",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-TestAppStack-Dev/TestAppStackDevBackendStackEE4ED375.assets.json\\\\\\" --verbose publish \\\\\\"e63f2a8e1bb43ba92cb61ad75e2eb81040744cb19cf4f7a8119b0de1103e837d:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PipelineAssetsFileAsset3FE71B523": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step TestAppStack/Pipeline/Assets/FileAsset3",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "PipelineAssetsFileRole59943A77",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-TestAppStack-Dev/TestAppStackDevBackendStackEE4ED375.assets.json\\\\\\" --verbose publish \\\\\\"d8b0f9a98bed9b82e720ee0b88391580b4a12342c184406d7cd4688770b95da4:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PipelineAssetsFileAsset474303B7D": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step TestAppStack/Pipeline/Assets/FileAsset4",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "PipelineAssetsFileRole59943A77",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-TestAppStack-Dev/TestAppStackDevBackendStackEE4ED375.assets.json\\\\\\" --verbose publish \\\\\\"26553e840f36522c76356f5a3a3ba63e89aa56843e5c4b6f4f42795e3bc3fdcb:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PipelineAssetsFileAsset5184A5C2F": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step TestAppStack/Pipeline/Assets/FileAsset5",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "PipelineAssetsFileRole59943A77",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-TestAppStack-Dev/TestAppStackDevBackendStackEE4ED375.assets.json\\\\\\" --verbose publish \\\\\\"152d82139f2d6d36e927a0f737ef8da58ef4836add31b24419bca003f35c1f8a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PipelineAssetsFileAsset669C72F3C": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step TestAppStack/Pipeline/Assets/FileAsset6",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "PipelineAssetsFileRole59943A77",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-TestAppStack-Dev/TestAppStackDevBackendStackEE4ED375.assets.json\\\\\\" --verbose publish \\\\\\"55e72e9dfb747986a02ee4ae7b356bce358f57f45b00c1aebfd3bddb50f06779:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PipelineAssetsFileRole59943A77": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineAssetsFileRoleDefaultPolicy14DB8755": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineAssetsFileRoleDefaultPolicy14DB8755",
        "Roles": Array [
          Object {
            "Ref": "PipelineAssetsFileRole59943A77",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineBuildSynthCdkBuildProject6BEFA8E6": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step TestAppStack/Pipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "PipelineBuildSynthCdkBuildProjectRole231EEA2A",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"build\\": {
      \\"commands\\": [
        \\"yarn install --ignore-scripts\\",
        \\"yarn build\\",
        \\"yarn cdk synth BackendStack\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"base-directory\\": \\"cdk.out\\",
    \\"files\\": \\"**/*\\"
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PipelineBuildSynthCdkBuildProjectRole231EEA2A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PipelineBuildSynthCdkBuildProject6BEFA8E6",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PipelineBuildSynthCdkBuildProject6BEFA8E6",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "PipelineBuildSynthCdkBuildProject6BEFA8E6",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C",
        "Roles": Array [
          Object {
            "Ref": "PipelineBuildSynthCdkBuildProjectRole231EEA2A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineCodeBuildActionRole226DB0CB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineBuildSynthCdkBuildProject6BEFA8E6",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineUpdatePipelineSelfMutationDAA41400",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineAssetsFileAsset185A67CB4",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineAssetsFileAsset24D2D639B",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineAssetsFileAsset3FE71B523",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineAssetsFileAsset474303B7D",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineAssetsFileAsset5184A5C2F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineAssetsFileAsset669C72F3C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE",
        "Roles": Array [
          Object {
            "Ref": "PipelineCodeBuildActionRole226DB0CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineEventsRole96280D9B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineEventsRoleDefaultPolicy62809D8F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "Pipeline9850B417",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineEventsRoleDefaultPolicy62809D8F",
        "Roles": Array [
          Object {
            "Ref": "PipelineEventsRole96280D9B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineProdPromoteToProdCodePipelineActionRole08AAED6C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineRoleB27FAA37": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineRoleDefaultPolicy7BDC1ABB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineSourceCodeCommitCodePipelineActionRole48F8DEFA",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineCodeBuildActionRole226DB0CB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineProdPromoteToProdCodePipelineActionRole08AAED6C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineRoleDefaultPolicy7BDC1ABB",
        "Roles": Array [
          Object {
            "Ref": "PipelineRoleB27FAA37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineSourceCodeCommitCodePipelineActionRole48F8DEFA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy3CEB31C0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "Repository22E53BBD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy3CEB31C0",
        "Roles": Array [
          Object {
            "Ref": "PipelineSourceCodeCommitCodePipelineActionRole48F8DEFA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineUpdatePipelineSelfMutationDAA41400": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step TestAppStack/Pipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "PipelineUpdatePipelineSelfMutationRole57E559E8",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy TestAppStack --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "PipelineUpdatePipelineSelfMutationRole57E559E8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PipelineUpdatePipelineSelfMutationDAA41400",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "PipelineUpdatePipelineSelfMutationDAA41400",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "PipelineUpdatePipelineSelfMutationDAA41400",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E",
        "Roles": Array [
          Object {
            "Ref": "PipelineUpdatePipelineSelfMutationRole57E559E8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Repository22E53BBD": Object {
      "Properties": Object {
        "RepositoryDescription": "test for cdk pipeline",
        "RepositoryName": "test-webapp-pipeline-repo",
      },
      "Type": "AWS::CodeCommit::Repository",
    },
    "RepositoryTestAppStackPipeline7A1EE7C1mainEventRule019687BA": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "main",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "Repository22E53BBD",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "Pipeline9850B417",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "PipelineEventsRole96280D9B",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
